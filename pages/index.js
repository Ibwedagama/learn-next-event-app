// Dependencies
import Head from 'next/head'
import useSWR from 'swr'
import { useState, useEffect } from 'react'
// import { getFeaturedEvents } from '../data/dummy-data'

// Components
import EventList from '../components/events/EventList'

export default function HomePage(props) {
  // const featuredEvents = getFeaturedEvents()

  const [items, setItems] = useState(props.items)

  const url = `${process.env.NEXT_PUBLIC_FIREBASE_SERVER}/events.json`
  const { data, error } = useSWR(url)

  useEffect(() => {
    const transformedData = []

    for (const key in data) {
      transformedData.push({
        id: key,
        title: data[key].title,
        description: data[key].description,
        date: data[key].date,
        location: data[key].location,
        image: data[key].image,
        isFeatured: data[key].isFeatured,
      })
    }
    setItems(transformedData)
  }, [data])

  if (!items && !data) {
    return <p>Loading data...</p>
  }

  return (
    <div>
      <Head>
        <title>Next Event App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <EventList items={items} />
    </div>
  )
}

export async function getStaticProps() {
  const url = `${process.env.NEXT_PUBLIC_FIREBASE_SERVER}/events.json`
  let transformedData = []
  try {
    const response = await fetch(url)
    const data = await response.json()

    for (const key in data) {
      transformedData.push({
        id: key,
        title: data[key].title,
        description: data[key].description,
        date: data[key].date,
        location: data[key].location,
        image: data[key].image,
        isFeatured: data[key].isFeatured,
      })
    }
  } catch (error) {
    transformedData = []
  }

  return {
    props: {
      items: transformedData
    }
  }
}
